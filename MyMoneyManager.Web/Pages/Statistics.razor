@page "/statistics"
@inject HttpClient httpClient
@inject ILocalStorageService localStorage
@inject NavigationManager NavManager

<MudPaper Width="300px" Elevation="0">
    <MudTreeView Items="Accounts" @bind-ActivatedValue="ActivatedAccount" @bind-SelectedValues="SelectedAccounts">

        <ItemTemplate>
            <MudTreeViewItem Items="@context.Children" Value="@context"
                             Icon="@context.AccountType.ToString()" Text="@context.Name"
                             EndText="@context.Balance.ToString()" EndTextTypo="@Typo.caption"
                             OnDoubleClick="Changed" />
        </ItemTemplate>
    </MudTreeView>
</MudPaper>

<div style="width: 100%">
    <MudText Typo="@Typo.subtitle1">Activated account: @(ActivatedAccount?.Name)</MudText>
    <MudText Typo="@Typo.subtitle1">Sum of selected balances: @GetSelectedSum()</MudText>
</div>
@code {
    private AccountViewModel ActivatedAccount { get; set; }

    private HashSet<AccountViewModel> SelectedAccounts { get; set; }

    private HashSet<AccountViewModel> Accounts { get; set; } = new HashSet<AccountViewModel>();


    protected override async Task OnInitializedAsync()
    {
        var token = await localStorage.GetItemAsStringAsync("accessToken");
        httpClient.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);


        var response = await httpClient.GetAsync("https://localhost:7014/api/account");

        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            Accounts =  JsonConvert.DeserializeObject<HashSet<AccountViewModel>>(content);
        }
    }

    private void Changed(MouseEventArgs value)
    {
        NavManager.NavigateTo($"/account/{ActivatedAccount.Id}");
    }

    public decimal GetSelectedSum()
    {
        return SelectedAccounts?.Sum(i => i.Balance) ?? 0;
    }
}
